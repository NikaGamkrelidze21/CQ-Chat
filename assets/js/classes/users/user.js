import { getRandomColor } from '../../components/random-color.js';

export default  class User {
    // TODO set variables private or protected
    // TODO update params
    // TODO add new methods
    constructor(name = null, number = null, sessionID = "") {
        this.name = name;
        this.number = number;
        this.sessionID = sessionID;
        // AUTOGENERATED
        this.status = "online";
        this.loginTime = new Date();
        this.avatarColor = getRandomColor();
        this.currentRoom = null;
        this.socket = io('https://chat.communiq.ge/namespace1', { transports: ['websocket'] });
        // UNDIFINED
        this.type = null;
    }

    getName() { return this.name; }
    setName(name) { this.name = name; }

    getNumber() { return this.number; }
    setNumber(number) { this.number = number; }

    setSessionID(sessionID) { this.sessionID = sessionID; }
    getSessionID() { return this.sessionID; }

    getAvatarColor() { return this.avatarColor; }
    setAvatarColor(avatarColor) { this.avatarColor = avatarColor; }

    getSocket() { return this.socket; }
    setSocket(socket) { this.socket = socket; }

    getType() { return this.type; }
    setType(type) { this.type = type; }

    getStatus() { return this.status; }
    setStatus(status) { this.status = status; }

    getLoginTime() { return this.loginTime; }
    setLoginTime(loginTime) { this.loginTime = loginTime; }

    setCurrentRoom(currentRoom) { this.currentRoom = currentRoom; }
    getCurrentRoom() { return this.currentRoom; }
}

// FUTURE FEATURE
class Admin extends User {
    constructor(name, number, sessionID) {
        super(name, number, sessionID)
        this.type = "admin";
    }
}

// FUTURE FEATURE
class Support extends User {
    constructor(name, number, sessionID) {
        super(name, number, sessionID)
        this.type = "support";
    }
}

 